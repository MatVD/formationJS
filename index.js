// ---------------------------------------------- //
//             Formation javascript               //
// ---------------------------------------------- //


// ------ 01 Les variables ------ //
// ------------------------------ //
    // Tout comme vous mettez le nom d'un carton en fonction de ce qui se trouvent √† l'int√©rieur, de m√™me, le nom d'une varibale doit indiquer ce qui se trouve √† l'int√©rieur

    // Exercice
        // Cr√©er deux variables : 
            // "numberOfSeasons" et lui affecter la valeur 6
            // "numberOfEpisodes" et assignez lui la valeur 12
    
// --- Modifier la valeur d'une variable

// --- Les Op√©rateurs

    // Exercice
        // Cr√©er deux nouvelles variables
            // "episodeTime" avec pour valeur 45
            // "commercialTime" avec 5

        // √Ä l'aide des deux variables, ainsi que du nombre d'√©pisodes et du nombre de saisons, 
        // cr√©ez une variable nomm√©e "totalShowTime" qui contient le temps de visionnage total de cette s√©rie


// --- Mutabilit√© des variables


// --- Les constantes

    // Exercice 
      // https://replit.com/team/DTBMI-javascript/Formation-JS-Exercice-1-les-variables

      // Voici un composant qui d√©construit une journ√©e en heures, minutes et secondes.

      // Cr√©er les trois constantes qui donnent le nombre d'heures par jour, le nombre de minutes par heure, et le nombre de secondes par minute.
    
      // Jouez un peu avec ces valeurs, et vous verrez vite l'importance d'avoir les bonnes valeurs constantes dans une application !
    
      // Dans l'espace allou√©, cr√©ez les trois constantes suivantes :
        // hoursPerDay: heures par jour
        // minutesPerHour: minutes par heure
        // secondsPerMinute: secondes par minute


  // R√©sum√© avec Kahoots

// ------ 02 Les Types de donn√©es ------ //
// ------------------------------------- //

// Le type d'une variable ou d'une constante est tout simplement le genre des donn√©es qu'elle enregistre. En JavaScript, il y a trois types primitifs principaux :

// number (nombre) ;
// string (cha√Æne de caract√®res) ;
// boolean (valeur logique).

// Les types primitifs sont les briques de base de chaque structure de donn√©es en JavaScript. Peu importe la complexit√© finale de votre application, √† sa base se trouveront ces trois types primitifs.

// Number

// Boolean

// String

    // Exercice
      // https://replit.com/team/DTBMI-javascript/Formation-JS-Exercice-2-les-types

      // Maintenant que vous avez termin√© le composant pour la s√©rie, il est temps de travailler sur le composant pour les √©pisodes individuels.

      // Ce composant affichera le titre de l'√©pisode, sa dur√©e en minutes, et si l'utilisateur a d√©j√† regard√© l'√©pisode ou non.

      // Cr√©ez une variable nomm√©e  episodeTitle  qui contient une cha√Æne de caract√®res correspondant au titre de votre √©pisode (employez votre cr√©ativit√© !).

      // Cr√©ez une variable appel√©e  episodeDuration  qui contient un nombre correspondant √† la dur√©e de votre √©pisode en minutes.

      // Enfin, cr√©ez une variable bool√©enne nomm√©e   hasBeenWatched  qui indique si l'utilisateur a d√©j√† regard√© l'√©pisode ou non.

      // V√©rifiez si le composant fonctionne correctement. N'h√©sitez pas √† modifier vos valeurs pour v√©rifier que le composant r√©agit comme pr√©vu. N'oubliez pas, votre code ira entre les commentaires "===" sur l'exercice.

  
    // R√©sum√© avec Kahoots


// ----------- 03 Les Objets ------------ //
// -------------------------------------- //

  // Mais qu'est-ce que cela signifie vraiment ? Commen√ßons par nous int√©resser √† quelques objets du monde r√©el, comme les stylos, les livres, les smartphones, les ordinateurs, etc.

  // Vous connaissez tous des types de stylos ‚Äì √† bille, feutre, plume, etc. Ils font tous partie du type d'objet : stylos. Vous pouvez √©crire avec, ils utilisent de l'encre et peuvent se tenir √† une main.

  // Ce serait identique pour diff√©rents types de livres. Ils poss√®dents tous : des pages, une couverture, un titre, etc.

  // Les objets poss√®dent tous des caract√©ristiques propre √† leur type

  // En programmation, on appelle un type d'objet => une classe. Pour cr√©er une classe, vous pouvez choisir le nom de votre choix. Vous le verrez, les classes permettent aussi de regrouper beaucoup de d√©tails ; c'est pourquoi elles s'appellent aussi des types complexes.


  // Comment cr√©er un objet ?


    // Exercice
      // https://replit.com/team/DTBMI-javascript/Formation-JS-Exercice-3-les-objets

      // Dans un exercice pr√©c√©dent, vous avez cr√©√© trois variables pour d√©crire l'√©pisode d'une s√©rie. On dirait la situation parfaite pour cr√©er un seul objet  episode  : cr√©ons-le maintenant !
      
      // Cr√©ez un objet (Object, en anglais) et stockez-le dans une variable appel√©e   episode  . Utilisez bien des accolades  {}  et mettez les trois attributs suivants :
      
        // title  : le titre de l'√©pisode ;
        // duration  : la dur√©e de l'√©pisode ;
        // hasBeenWatched  : si l'√©pisode a √©t√© visionn√© ou non.
      
      // Associez des valeurs appropri√©es √† chaque attribut.
      
      // N'oubliez pas d'utiliser des paires cl√©-valeur s√©par√©es par des virgules. Votre code ira entre les commentaires "===" sur l'exercice.
      
      // Si vous n'y arrivez pas du premier coup, ne vous d√©couragez pas, poursuivez vos efforts ! L'apprentissage de la programmation se fait en pratiquant et en apprenant de ses erreurs. üòé


  // Comment acc√©der aux donn√©es d'un objet ?

    // Exercice
      // https://replit.com/team/DTBMI-javascript/Formation-JS-Exercice-3-les-objets

      // Voici une occasion de mettre en pratique la dot notation

      // Dans l‚Äôexercice pr√©c√©dent, quand vous avez construit l'Object episode  , le code de votre coll√®gue en a extrait les donn√©es pour les afficher dans son composant. Maintenant, c'est √† vous d'extraire les informations pour les fournir au composant avec la notation  .  ou "dot".

      // Cr√©ez les trois variables suivantes :
        // episodeTitle  : le titre de l'√©pisode (string) ;
        // episodeDuration  : la dur√©e de l'√©pisode (number) ;
        // episodeHasBeenWatched  : si l'√©pisode a √©t√© regard√© ou non (boolean).

      // Assignez-y les valeurs correspondantes de l'objet  episode  en utilisant la notation "dot".


// Les classes 
  // La construction d'un objet √† la main, par la notation √† accolades vue pr√©c√©demment, convient bien √† des objets simples et uniques. Mais vous aurez souvent besoin de beaucoup d'objets du m√™me type. C'est l√† que les classes sont utiles

  // Une classe est un mod√®le pour un objet dans le code. Elle permet de construire plusieurs objets du m√™me type (appel√©s instances de la m√™me classe) plus facilement, rapidement et en toute fiabilit√©

// Comment construire une classe ?

    // Exerice
      // https://replit.com/team/DTBMI-javascript/Formation-JS-Exercice-4-les-classes

      // Maintenant que vous savez cr√©er des classes, il est temps d'en profiter pour notre composant √©pisode. Cette fois-ci, il y a trois composants √©pisodes, donc la mani√®re logique de proc√©der serait de cr√©er une classe   Episode  , et puis en cr√©er trois instances ‚Äì une pour chaque √©pisode.

      // Cr√©ez une classe  Episode  avec le mot cl√©  class  .
      
      // Cr√©ez un constructor pour votre classe  Episode  qui devra accepter trois arguments :
        // title  : le titre de l'√©pisode (string) ;
        // duration  : la dur√©e de l'√©pisode (number) ;
        // hasBeenWatched  : si l'√©pisode a √©t√© regard√© ou non (boolean).
      
      // En utilisant le mot cl√©   this  , assignez les propri√©t√©s  title  ,  duration  et  hasBeenWatched  via un constructor .
      
      // Avec le mot cl√©   new  , cr√©ez trois instances de la classe  Episode  :
        // firstEpisode  ;
        // secondEpisode  ;
        // thirdEpisode  .
      
      // N'oubliez pas de passer des arguments appropri√©s √† chaque instance.


  // R√©sum√© avec Kahoots


// ----------- 04 Les tableaux ------------ //
// ---------------------------------------- //
  // Il existe un autre type en JavaScript : le tableau (array).

  // Info : l'indice d'un tableau d√©marre √† z√©ro

    // Exercice
    // https://replit.com/team/DTBMI-javascript/Formation-JS-Exercice-5-les-tableaux

// 05 - Les variables

// 06 - Les variables

